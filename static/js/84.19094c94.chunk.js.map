{"version":3,"sources":["components/Markdown/Preview/CodeView/prismjs/javascript.js"],"names":["Prism","languages","javascript","extend","insertBefore","pattern","lookbehind","greedy","alias","inside","rest","markup","js"],"mappings":"kFACAA,MAAMC,UAAUC,WAAaF,MAAMC,UAAUE,OAAO,QAAS,CAC3D,QAAW,8TACX,OAAU,wGAEV,SAAY,gDACZ,SAAY,mGAGdH,MAAMC,UAAUG,aAAa,aAAc,UAAW,CACpD,MAAS,CACPC,QAAS,gHACTC,YAAY,EACZC,QAAQ,GAGV,oBAAqB,CACnBF,QAAS,wHACTG,MAAO,YAET,SAAY,uBAGdR,MAAMC,UAAUG,aAAa,aAAc,SAAU,CACnD,kBAAmB,CACjBC,QAAS,mCACTE,QAAQ,EACRE,OAAQ,CACN,cAAiB,CACfJ,QAAS,YACTI,OAAQ,CACN,4BAA6B,CAC3BJ,QAAS,UACTG,MAAO,eAETE,KAAM,OAGV,OAAU,cAIhBV,MAAMC,UAAUC,WAAW,mBAAmBO,OAA9C,cAAsEA,OAAOC,KAAOV,MAAMC,UAAUC,WAEhGF,MAAMC,UAAUU,QAClBX,MAAMC,UAAUG,aAAa,SAAU,MAAO,CAC5C,OAAU,CACRC,QAAS,4CACTC,YAAY,EACZG,OAAQT,MAAMC,UAAUC,WACxBM,MAAO,sBACPD,QAAQ,KAKdP,MAAMC,UAAUW,GAAKZ,MAAMC,UAAUC","file":"static/js/84.19094c94.chunk.js","sourcesContent":["/* eslint-disable */\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n  'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n    alias: 'function'\n  },\n  'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: null // See below\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'script': {\n      pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n      alias: 'language-javascript',\n      greedy: true\n    }\n  });\n}\n\nPrism.languages.js = Prism.languages.javascript;\n"],"sourceRoot":""}